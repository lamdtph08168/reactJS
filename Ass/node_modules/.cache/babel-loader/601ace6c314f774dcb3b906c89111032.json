{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Ass\\\\src\\\\pages\\\\views\\\\Admin\\\\DetailProduct\\\\index.js\";\nimport React, { useState } from 'react';\nimport PropTypes from \"prop-types\";\nimport { useParams } from \"react-router-dom\";\nimport { useHistory } from 'react-router-dom';\nimport { useForm } from \"react-hook-form\";\nimport firebase from \"../../../../firebase\";\n\nconst DetailProduct = ({\n  onAdd,\n  products,\n  onUpdate,\n  categories\n}) => {\n  console.log(products);\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const {\n    id\n  } = useParams();\n  const history = useHistory();\n  const product = id ? products.find(product => product.id == id) : {};\n  const [valueInput, setValueInput] = useState(product);\n\n  const onHandleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValueInput({ ...valueInput,\n      [name]: value\n    });\n  };\n\n  const onHandleSubmit = data => {\n    //upimage\n    if (!data.image[0]) {\n      onUpdate(id, valueInput);\n      history.push(\"/admin/products\");\n    } else {\n      // console.log(data.image[0]);\n      let file = data.image[0]; // tạo reference chứa ảnh trên firesbase\n\n      let storageRef = firebase.storage().ref(`images/${file.name}`); // đẩy ảnh lên đường dẫn trên\n\n      storageRef.put(file).then(function () {\n        storageRef.getDownloadURL().then(url => {\n          console.log(url); // Tạo object mới chứa toàn bộ thông tin từ input\n\n          const newData = { ...data,\n            image: url\n          };\n          console.log(newData); // đẩy dữ liệu ra ngoài app.js thông qua props onAdd\n\n          onUpdate(id, newData);\n          history.push(\"/admin/products\");\n        });\n      });\n    }\n\n    ;\n  }; // const onHandleSubmit = data => {\n  //     if(data){\n  //         if(!id) {\n  //             onAdd(valueInput);\n  //         }else{\n  //             onUpdate(id, valueInput);\n  //         }\n  //     }\n  //     history.push('/admin/products');\n  // }\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card shadow ml-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-responsive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onHandleSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 27\n    }\n  }, \"Name Product\", /*#__PURE__*/React.createElement(\"input\", {\n    defaultValue: valueInput.name || \"\",\n    className: \"form-control\",\n    ref: register({\n      required: true,\n      minLength: 2\n    }),\n    name: \"name\",\n    type: \"text\",\n    onChange: onHandleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 41\n    }\n  }), errors.name && errors.name.type === 'required' && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 91\n    }\n  }, \"B\\u1EA1n ko \\u0111\\u1EC3 tr\\u1ED1ng t\\xEAn\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 39\n    }\n  }, \"Image \", /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    border: \"0px\",\n    ref: register({\n      required: true\n    }),\n    type: \"file\",\n    name: \"image\",\n    onChange: onHandleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 46\n    }\n  }), errors.image && errors.image.type === 'required' && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 93\n    }\n  }, \"B\\u1EA1n ko \\u0111\\u1EC3 tr\\u1ED1ng \\u1EA3nh\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 43\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: product.image,\n    width: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 43\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 39\n    }\n  }), \"Price\", /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    ref: register({\n      required: true\n    }),\n    onChange: onHandleChange,\n    defaultValue: valueInput.price || \"\",\n    name: \"price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 44\n    }\n  }), errors.price && errors.price.type === 'required' && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 90\n    }\n  }, \"B\\u1EA1n ko \\u0111\\u1EC3 tr\\u1ED1ng \"), \"Sale\", /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    ref: register({\n      required: true\n    }),\n    onChange: onHandleChange,\n    defaultValue: valueInput.price || \"\",\n    name: \"sale\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 42\n    }\n  }), errors.sale && errors.sale.type === 'required' && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 88\n    }\n  }, \"B\\u1EA1n ko \\u0111\\u1EC3 tr\\u1ED1ng \"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 36\n    }\n  }), \"Danh m\\u1EE5c\", /*#__PURE__*/React.createElement(\"select\", {\n    className: \"form-control\",\n    name: \"id_cate\",\n    ref: register,\n    onChange: onHandleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 37\n    }\n  }, \"Choose Category\"), categories.map(({\n    id,\n    name\n  }) => /*#__PURE__*/React.createElement(\"option\", {\n    value: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 37\n    }\n  }, name))), \"Detail\", /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"form-control\",\n    rows: \"3\",\n    onChange: onHandleChange,\n    defaultValue: valueInput.detail || \"\",\n    name: \"detail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 38\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 43\n    }\n  }, \"Update\")))))));\n};\n\nDetailProduct.propTypes = {};\nexport default DetailProduct;","map":{"version":3,"sources":["C:/Users/ASUS/Ass/src/pages/views/Admin/DetailProduct/index.js"],"names":["React","useState","PropTypes","useParams","useHistory","useForm","firebase","DetailProduct","onAdd","products","onUpdate","categories","console","log","register","handleSubmit","errors","id","history","product","find","valueInput","setValueInput","onHandleChange","e","name","value","target","onHandleSubmit","data","image","push","file","storageRef","storage","ref","put","then","getDownloadURL","url","newData","required","minLength","type","price","sale","map","detail","propTypes"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {useHistory} from 'react-router-dom'\r\nimport { useForm } from \"react-hook-form\";\r\nimport firebase from \"../../../../firebase\";\r\nconst DetailProduct = ({ onAdd , products, onUpdate, categories }) => {\r\n    console.log(products)\r\n    const { register, handleSubmit , errors } = useForm();\r\n    const { id } = useParams();\r\n    const history = useHistory();\r\n  \r\n    const product = id?products.find(product => product.id == id) : {};\r\n    const [valueInput, setValueInput] = useState(product);\r\n  \r\n    const onHandleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        \r\n        setValueInput({\r\n            ...valueInput,\r\n            [name]: value\r\n        })\r\n    }\r\n    const onHandleSubmit = (data) => {\r\n        //upimage\r\n        if(!data.image[0]){\r\n            onUpdate(id, valueInput);\r\n            history.push(\"/admin/products\");\r\n        }else{\r\n\r\n       \r\n        // console.log(data.image[0]);\r\n        let file = data.image[0];\r\n        // tạo reference chứa ảnh trên firesbase\r\n        let storageRef = firebase.storage().ref(`images/${file.name}`);\r\n        // đẩy ảnh lên đường dẫn trên\r\n        storageRef.put(file).then(function () {\r\n            storageRef.getDownloadURL().then((url) => {\r\n                console.log(url);\r\n                // Tạo object mới chứa toàn bộ thông tin từ input\r\n                const newData = {\r\n                   \r\n                    ...data,\r\n                    image: url,\r\n                };\r\n                console.log(newData);\r\n                // đẩy dữ liệu ra ngoài app.js thông qua props onAdd\r\n                onUpdate(id, newData);\r\n                history.push(\"/admin/products\");\r\n            });\r\n        });\r\n    };\r\n    };\r\n  \r\n    // const onHandleSubmit = data => {\r\n        \r\n    //     if(data){\r\n    //         if(!id) {\r\n    //             onAdd(valueInput);\r\n               \r\n                \r\n    //         }else{\r\n    //             onUpdate(id, valueInput);\r\n              \r\n    //         }\r\n           \r\n    //     }\r\n    //     history.push('/admin/products');\r\n    // }\r\n    \r\n\r\n  return (\r\n      <div>\r\n          <div className=\"main-panel\">\r\n              <div className=\"card shadow ml-10\">\r\n                  <div className=\"card-body\">\r\n                      <div className=\"table-responsive\">\r\n                          <form onSubmit={handleSubmit(onHandleSubmit)}>\r\n                       \r\n                                     \r\n                                    Name Product \r\n                                        <input defaultValue={valueInput.name || \"\"} className=\"form-control\"\r\n                                          ref={register({\r\n                                            required: true,\r\n                                            minLength:2\r\n                                            \r\n                                          })}\r\n                                          name=\"name\" type=\"text\"  onChange={onHandleChange}\r\n                                          ></input>\r\n                                          {errors.name && errors.name.type ==='required'&&<span className='text-danger'>Bạn ko để trống tên</span>}\r\n                                          \r\n                                    <br/>\r\n                                      \r\n                                      <td>\r\n                                        \r\n                                       Image <input className=\"form-control\" border=\"0px\" \r\n                                        \r\n                                        ref={register({\r\n                                            required: true,\r\n                                       \r\n                                            \r\n                                          })}\r\n                                          type=\"file\" name=\"image\" onChange={onHandleChange}\r\n                                        ></input>\r\n                                          {errors.image && errors.image.type ==='required'&&<span className='text-danger'>Bạn ko để trống ảnh</span>}\r\n                                          <br/>\r\n                                          <img src={product.image} width=\"100\"></img>\r\n                                      </td>\r\n                                      <br/>\r\n                                      Price<input className=\"form-control\" \r\n                                      ref={register({\r\n                                        required: true,\r\n                              \r\n                                        \r\n                                      })}\r\n                                       onChange={onHandleChange} defaultValue={valueInput.price || \"\"} name=\"price\"></input>\r\n                                       {errors.price && errors.price.type ==='required'&&<span className='text-danger'>Bạn ko để trống </span>}\r\n                                 \r\n                                     Sale<input className=\"form-control\" \r\n                                      ref={register({\r\n                                        required: true,\r\n                              \r\n                                        \r\n                                      })}\r\n                                       onChange={onHandleChange} defaultValue={valueInput.price || \"\"} name=\"sale\"></input>\r\n                                       {errors.sale && errors.sale.type ==='required'&&<span className='text-danger'>Bạn ko để trống </span>}\r\n                                   <br/>\r\n                                      Danh mục\r\n                                    <select className=\"form-control\" name=\"id_cate\" ref={register} onChange={onHandleChange}>\r\n                      \r\n                                    <option value={0}>Choose Category</option>\r\n                                    {categories.map(({ id, name }) => (\r\n                                    <option value={id}>{name}</option>\r\n                                    ))}\r\n                                    </select>\r\n                                        Detail\r\n                                    \r\n                                    <textarea className=\"form-control\" rows=\"3\" onChange={onHandleChange} defaultValue={valueInput.detail || \"\"} name=\"detail\" />\r\n                                   \r\n                                     <br/>    \r\n                                          <button className=\"btn btn-primary\" >Update</button>\r\n                                     \r\n                        \r\n                          </form>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n      </div>\r\n  \r\n  );\r\n};\r\n\r\nDetailProduct.propTypes = {};\r\n\r\nexport default DetailProduct;\r\n"]},"metadata":{},"sourceType":"module"}