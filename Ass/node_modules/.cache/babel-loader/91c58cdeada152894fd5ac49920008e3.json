{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Ass\\\\src\\\\pages\\\\views\\\\Admin\\\\AddCategories\\\\index.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { useForm } from \"react-hook-form\";\nimport firebase from \"../../../../firebase\";\n\nconst AddCate = ({\n  onAddCate\n}) => {\n  const history = useHistory();\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n\n  const onHandleSubmit = data => {\n    //upimage\n    // console.log(data.image[0]);\n    let file = data.image[0]; // tạo reference chứa ảnh trên firesbase\n\n    let storageRef = firebase.storage().ref(`images/${file.name}`); // đẩy ảnh lên đường dẫn trên\n\n    storageRef.put(file).then(function () {\n      storageRef.getDownloadURL().then(url => {\n        console.log(url); // Tạo object mới chứa toàn bộ thông tin từ input\n\n        const newData = {\n          id: Math.random().toString(36).substr(2, 9),\n          ...data,\n          image: url\n        };\n        console.log(newData); // đẩy dữ liệu ra ngoài app.js thông qua props onAdd\n\n        onAddCate(newData);\n        history.push(\"/admin/category\");\n      });\n    });\n  }; // const [valueInput, setValueInput] = useState({});\n  // const onChange = (e) =>{\n  //     const {name, value} = e.target\n  //     setValueInput({\n  //         ...valueInput,\n  //         [name]:value\n  //     });\n  // } \n  // const onSubmit = () =>{\n  //     onAddCate(valueInput);\n  //     history.push('/admin/category');\n  // }\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"h3 mb-2 text-gray-800\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"Add Categories Form\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card shadow mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    action: \"\",\n    onSubmit: handleSubmit(onHandleSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 29\n    }\n  }, \"T\\xEAn danh m\\u1EE5c \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    ref: register({\n      required: true,\n      minLength: 2,\n      maxLength: 10\n    }),\n    name: \"name\",\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 29\n    }\n  }), errors.name && errors.name.type === 'required' && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 79\n    }\n  }, \"B\\u1EA1n ko \\u0111\\u1EC3 tr\\u1ED1ng \"), errors.name && errors.name.type === 'minLength' && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 80\n    }\n  }, \"Kh\\xF4ng \\u0111\\u01B0\\u1EE3c \\u0111\\u1EC3 kho\\u1EA3ng tr\\u0103ng \"), errors.name && errors.name.type === 'maxLength' && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 80\n    }\n  }, \"T\\u1ED1i \\u0111a 10 k\\xED t\\u1EF1\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 29\n    }\n  }, \"\\u1EA2nh\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    ref: register({\n      required: true\n    }),\n    name: \"image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 29\n    }\n  }), errors.image && errors.image.type === 'required' && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 81\n    }\n  }, \"B\\u1EA1n ko \\u0111\\u1EC3 tr\\u1ED1ng \")), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }, \"Submit\")))));\n};\n\nAddCate.propTypes = {};\nexport default AddCate;","map":{"version":3,"sources":["C:/Users/ASUS/Ass/src/pages/views/Admin/AddCategories/index.js"],"names":["React","useState","PropTypes","useHistory","useForm","firebase","AddCate","onAddCate","history","register","handleSubmit","errors","onHandleSubmit","data","file","image","storageRef","storage","ref","name","put","then","getDownloadURL","url","console","log","newData","id","Math","random","toString","substr","push","required","minLength","maxLength","type","propTypes"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {useHistory} from 'react-router-dom'\r\nimport { useForm } from \"react-hook-form\";\r\nimport firebase from \"../../../../firebase\";\r\nconst AddCate = ({onAddCate}) => {\r\n    const history = useHistory();\r\n    const {register, handleSubmit, errors} = useForm();\r\n    const onHandleSubmit = (data) => {\r\n        //upimage\r\n        // console.log(data.image[0]);\r\n        let file = data.image[0];\r\n        // tạo reference chứa ảnh trên firesbase\r\n        let storageRef = firebase.storage().ref(`images/${file.name}`);\r\n        // đẩy ảnh lên đường dẫn trên\r\n        storageRef.put(file).then(function () {\r\n            storageRef.getDownloadURL().then((url) => {\r\n                console.log(url);\r\n                // Tạo object mới chứa toàn bộ thông tin từ input\r\n                const newData = {\r\n                    id: Math.random().toString(36).substr(2, 9),\r\n                    ...data,\r\n                    image: url,\r\n                };\r\n                console.log(newData);\r\n                // đẩy dữ liệu ra ngoài app.js thông qua props onAdd\r\n                onAddCate(newData);\r\n                history.push(\"/admin/category\");\r\n            });\r\n        });\r\n    };\r\n    // const [valueInput, setValueInput] = useState({});\r\n    // const onChange = (e) =>{\r\n    //     const {name, value} = e.target\r\n    //     setValueInput({\r\n    //         ...valueInput,\r\n    //         [name]:value\r\n    //     });\r\n    // } \r\n  \r\n    // const onSubmit = () =>{\r\n    //     onAddCate(valueInput);\r\n    //     history.push('/admin/category');\r\n    // }\r\n   \r\n    return (\r\n        <div>\r\n            <h1 className=\"h3 mb-2 text-gray-800\">Add Categories Form</h1>\r\n            <div className=\"card shadow mb-4\">\r\n                <div className=\"card-body\">\r\n                    <form action=\"\" onSubmit={handleSubmit(onHandleSubmit)}>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"\">Tên danh mục </label>\r\n                            <input type=\"text\"\r\n                            ref={register({\r\n                                required: true,\r\n                                minLength:2,\r\n                                maxLength:10\r\n                                \r\n                              })} name=\"name\" className=\"form-control\"/> \r\n                              {errors.name && errors.name.type ==='required'&&<span className='text-danger'>Bạn ko để trống </span>}\r\n                              {errors.name && errors.name.type ==='minLength'&&<span  className='text-danger'>Không được để khoảng trăng </span>}\r\n                              {errors.name && errors.name.type ==='maxLength'&&<span  className='text-danger'>Tối đa 10 kí tự</span>}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"\">Ảnh</label>\r\n                            <br/>\r\n                            <input type=\"file\"\r\n                            ref={register({\r\n                                required: true,\r\n                                \r\n                                \r\n                              })} \r\n                             name=\"image\" /> \r\n                              {errors.image && errors.image.type ==='required'&&<span  className='text-danger'>Bạn ko để trống </span>}\r\n                           \r\n                        </div>\r\n                  \r\n                        <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n   \r\n   )\r\n}\r\n\r\nAddCate.propTypes = {\r\n\r\n}\r\n\r\nexport default AddCate\r\n"]},"metadata":{},"sourceType":"module"}